<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AdviceItem">
    <cache eviction="LRU" readOnly="false" flushInterval="600000" size="10000"/>
    <resultMap id="AdviceItemResult" type="com.zcreate.review.model.AdviceItem">
        <result column="adviceItemID" jdbcType="INTEGER" property="adviceItemID"/>
        <result column="adviceDate" jdbcType="TIMESTAMP" property="adviceDate"/>
        <result column="hospID" jdbcType="VARCHAR" property="hospID"/>
        <result column="longAdvice" jdbcType="INTEGER" property="longAdvice"/>
        <!--<result column="inDate" jdbcType="TIMESTAMP" property="inDate"/>-->
        <result column="advice" jdbcType="VARCHAR" property="advice"/>
        <result column="spec" jdbcType="VARCHAR" property="spec"/>
        <result column="goodsID" jdbcType="INTEGER" property="goodsID"/>
        <result column="doctorName" jdbcType="VARCHAR" property="doctorName"/>
        <result column="nurseName" jdbcType="VARCHAR" property="nurseName"/>
        <result column="endDate" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="endDoctorName" jdbcType="VARCHAR" property="endDoctorName"/>
        <result column="endNurseName" jdbcType="VARCHAR" property="endNurseName"/>
        <result column="quantity" jdbcType="DOUBLE" property="quantity"/>
        <result column="total" jdbcType="DOUBLE" property="total"/>
        <result column="frequency" jdbcType="VARCHAR" property="frequency"/>
        <result column="usage" jdbcType="VARCHAR" property="usage"/>
        <result column="unit" jdbcType="VARCHAR" property="unit"/>
        <result column="problemCode" jdbcType="VARCHAR" property="problemCode"/>
        <result column="problemDesc" jdbcType="VARCHAR" property="problemDesc"/>
        <result column="adviceType" jdbcType="INTEGER" property="adviceType"/>
        <result column="orderID" jdbcType="INTEGER" property="orderID"/>
        <result column="groupID" jdbcType="INTEGER" property="groupID"/>
        <result column="antiClass" jdbcType="INTEGER" property="antiClass"/>
        <result column="instructionID" jdbcType="INTEGER" property="instructionID"/>
        <result column="medicineName" jdbcType="INTEGER" property="medicineName"/>
        <result column="contents" jdbcType="DOUBLE" property="contents"/>
        <result column="dose" jdbcType="INTEGER" property="dose"/>
        <result column="producer" jdbcType="INTEGER" property="producer"/>
    </resultMap>
    <!--<resultMap id="AdviceItemReviewResult" type="com.zcreate.review.model.AdviceItemReview">
        <result column="adviceItemReviewID" jdbcType="INTEGER" property="adviceItemReviewID"/>
        <result column="hospID" jdbcType="INTEGER" property="hospID"/>
        <result column="orderID" jdbcType="INTEGER" property="orderID"/>
        <result column="longAdvice" jdbcType="INTEGER" property="longAdvice"/>
        <result column="adviceDate" jdbcType="TIMESTAMP" property="adviceDate"/>
        <result column="endDate" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="inPatient" jdbcType="VARCHAR" property="inPatient"/>
        <result column="usage" jdbcType="VARCHAR" property="usage"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        &lt;!&ndash;<result column="eachQuantity" jdbcType="DOUBLE" property="eachQuantity"/>&ndash;&gt;
        <result column="dosis" jdbcType="DOUBLE" property="dosis"/>
        <result column="frequency" jdbcType="INTEGER" property="frequency"/>
        <result column="dayNum" jdbcType="INTEGER" property="dayNum"/>
        <result column="totalQuantity" jdbcType="DOUBLE" property="totalQuantity"/>

        <result column="route" jdbcType="VARCHAR" property="route"/>
        <result column="menstruum" jdbcType="VARCHAR" property="menstruum"/>
        <result column="purpose" jdbcType="INTEGER" property="purpose"/>
        <result column="problemCode" jdbcType="VARCHAR" property="problemCode"/>
        <result column="problemDesc" jdbcType="VARCHAR" property="problemDesc"/>
        <result column="adviceType" jdbcType="INTEGER" property="adviceType"/>
    </resultMap>-->
    <select id="selectLongAdviceItem" parameterType="java.util.Map" resultMap="AdviceItemResult">
        SELECT M.antiClass, R.adviceItemID, R.hospID, R.longAdvice, R.adviceDate, replace(R.advice, '%', '﹪') advice,R.spec, R.adviceType, M.goodsID, R.doctorName, R.nurseName,
               R.endDate, R.endDoctorName, R.endNurseName, R.quantity, R.unit, R.problemCode, R.problemDesc, R.frequency, R.usage, R.orderID, R.groupID, R.total,
               M.matchInstrID                                                                                   instructionID, replace(M.chnName, '%', '﹪') medicineName,
               M.contents, M.medicineID, M.dose, M.producer
        FROM ${AdviceItemTable} R
                 LEFT JOIN Medicine M ON R.goodsID = M.goodsID
        WHERE R.hospID = #{hospID:INTEGER} AND R.longAdvice = 1
        ORDER BY R.groupID, R.orderID
    </select>
    <select id="selectShortAdviceItem" parameterType="java.util.Map" resultMap="AdviceItemResult">
        SELECT M.antiClass, R.adviceItemID, R.hospID, R.longAdvice, R.adviceDate, replace(R.advice, '%', '﹪') advice,R.spec, R.adviceType, M.goodsID, R.doctorName, R.nurseName,
               R.endDate, R.endDoctorName, R.endNurseName, R.quantity, R.unit, R.problemCode, R.problemDesc, R.frequency, R.usage, R.orderID, R.groupID, R.total,
               M.matchInstrID                                                                                   instructionID, replace(M.chnName, '%', '﹪') medicineName,
               M.contents, M.medicineID, M.dose, M.producer
        FROM ${AdviceItemTable} R
                 LEFT JOIN Medicine M ON R.goodsID = M.goodsID
        WHERE R.hospID = #{hospID:INTEGER} AND R.longAdvice = 2
        ORDER BY R.groupID, R.orderID
    </select>
    <select id="selectSurgery" parameterType="int" resultType="java.util.HashMap">
        SELECT surgeryID, incision, surgeryDate, surgeryName, healOver
        FROM Surgery
        WHERE hospID = #{hospID:INTEGER}
    </select>
    <select id="antiIncision" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT count(DISTINCT I.hospID)                                               outAntiParent,
               count(DISTINCT CASE WHEN S.incision = 'Ⅰ' THEN I.hospID ELSE null END) outOneIncisionAntiParent
        FROM ${AdviceItemTable} I
                 LEFT JOIN InPatient R ON I.hospID = R.hospID
                 LEFT JOIN Surgery S ON I.hospID = S.hospID
        WHERE R.outDate >= #{fromDate:TIMESTAMP} AND
              R.outDate &lt; #{toDate:TIMESTAMP} AND
              I.goodsID IN
              (SELECT goodsID
               FROM Medicine
               WHERE antiClass > 0)
    </select>
    <select id="selectSurgeryCount" parameterType="int" resultType="int">
        SELECT count(incision)
        FROM Surgery
        WHERE hospID = #{hospID:INTEGER}
    </select>

    <!--AdviceItemReview  ***********************-->
   <!-- <insert id="insertAdviceItemReview" parameterType="com.zcreate.review.model.AdviceItemReview">
        INSERT INTO AdviceItemReview (hospID, orderID, groupID, longAdvice,adviceType, problemCode, problemDesc,purpose,menstruum,frequency,usage)
        VALUES (#{hospID:INTEGER}, #{orderID:INTEGER},#{groupID:INTEGER}, #{longAdvice:INTEGER}, #{adviceType:VARCHAR}, #{problemCode:VARCHAR}, #{problemDesc:VARCHAR},
        #{purpose:INTEGER}, #{menstruum:VARCHAR},#{frequency:VARCHAR},#{usage:VARCHAR})
        <selectKey resultType="int" order="AFTER" keyProperty="adviceItemReviewID">
            select @@IDENTITY as adviceItemReviewID
        </selectKey>
    </insert>
    <select id="selectLongAdviceItemReview" parameterType="java.util.Map" resultMap="AdviceItemReviewResult">
        SELECT A.adviceItemReviewID, A.hospID, A.orderID, A.groupID, A.longAdvice, A.problemCode, A.problemDesc, A.purpose, A.menstruum, B.adviceDate, B.endDate,
               replace(rtrim(B.advice), '%', '﹪')                                                                      advice,
               A.frequency, CASE WHEN B.endDate IS NOT NULL THEN DATEDIFF(DD, B.adviceDate, B.endDate) + 1 ELSE -1 END dayNum, B.quantity
        FROM AdviceItemReview A
                 LEFT JOIN ${AdviceItemTable} B ON A.hospID = B.hospID AND A.orderID = B.orderID AND A.groupID = B.groupID
        WHERE A.longAdvice = 1 AND A.hospID = #{hospID:INTEGER}
    </select>
    <select id="selectShortAdviceItemReview" parameterType="java.util.Map" resultMap="AdviceItemReviewResult">
        SELECT A.adviceItemReviewID, A.hospID, A.orderID, A.groupID, A.longAdvice, A.problemCode, A.problemDesc, A.purpose, A.menstruum, B.adviceDate, B.endDate,
               replace(rtrim(B.advice), '%', '﹪')                     advice,
               A.frequency, DATEDIFF(DD, B.adviceDate, B.endDate) + 1 dayNum, B.quantity
        FROM AdviceItemReview A
                 LEFT JOIN ${AdviceItemTable} B ON A.hospID = B.hospID AND A.orderID = B.orderID AND A.groupID = B.groupID
        WHERE A.longAdvice = 2 AND A.hospID = #{hospID:INTEGER}
    </select>

    <update id="updateAdviceItemReview" parameterType="com.zcreate.review.model.AdviceItemReview">
        UPDATE AdviceItemReview
        <set>
            <if test="problemCode != null">problemCode = #{problemCode:VARCHAR},</if>
            <if test="problemDesc != null">problemDesc = #{problemCode:VARCHAR},</if>
            <if test="purpose != null">purpose = #{purpose:INTEGER},</if>
            <if test="menstruum != null">menstruum = #{menstruum:VARCHAR},</if>
        </set>
        WHERE adviceItemReviewID = #{adviceItemReviewID:INTEGER}
    </update>
    <delete id="deleteAdviceItemReview" parameterType="java.util.Map">
        delete AdviceItemReview where hospID =#{hospID:INTEGER}
        <if test="@com.zcreate.util.Ognl@isNotEmpty(adviceItemReviewList)">
            <foreach separator="," item="item" index="index" open=" and adviceItemReviewID not in (" close=")" collection="adviceItemReviewList">
                #{item}
            </foreach>
        </if>
    </delete>
    <select id="selectAdviceItemCount" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT count(adviceItemID) itemCount, longAdvice
        FROM ${AdviceItemTable}
        WHERE hospID = #{hospID:INTEGER}
        GROUP BY longAdvice
    </select>-->
    <!--诊断 Diagnosis -->
   <!-- <insert id="insertDiagnosis" parameterType="java.util.Map">
        insert into Diagnosis(hospID,type,diagnosisNo,disease,choose) values(#{hospID:INTEGER},#{type:INTEGER},#{diagnosisNo:VARCHAR},#{disease:VARCHAR},#{choose:INTEGER})
        <selectKey resultType="int" order="AFTER" keyProperty="diagnosisID">
            select @@IDENTITY as diagnosisID
        </selectKey>
    </insert>
    <delete id="deleteDiagnosis" parameterType="java.util.Map">
        delete
        from Diagnosis
        where hospID = #{hospID:INTEGER} and choose = #{choose:INTEGER}
    </delete>
    <select id="selectDiagnosis" parameterType="java.util.Map" resultType="java.util.Map">
        select diagnosisID, hospID, type, diagnosisNo, disease, choose
        from Diagnosis
        where hospID = #{hospID:INTEGER}
        order by diagnosisNo
    </select>-->
    <select id="selectAdviceItemForExcel" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT max(M.chnName) chnName, sum(datediff(DD, I.adviceDate, I.endDate) + case when I.longAdvice=2 or datepart(hh,I.endDate)>10 then 1 else 0 end) dayNum,
        max(M.DDD) DDD, sum(I.quantity) quantity, total totalQuantity
        FROM Medicine M, ${AdviceItemTable} I WHERE M.goodsID = I.goodsID AND I.hospID= #{hospID:INTEGER}
        <if test="@com.zcreate.util.Ognl@isNotEmpty(chineseInjection)">and M.route=2 and M.western>1 and M.injectRoute>0</if>
        <if test="@com.zcreate.util.Ognl@isNotEmpty(antiClass)">and M.antiClass>0</if>
        group by I.goodsID
    </select>
    <!--<select id="selectAdviceItemReviewForResearch" parameterType="string" resultMap="AdviceItemReviewResult">
        SELECT A.adviceItemReviewID, A.hospID, A.orderID, A.longAdvice, A.problemCode, A.problemDesc, A.purpose, A.menstruum, B.adviceDate, B.endDate, replace(B.advice, '%', '﹪') inPatient,
               B.adviceType,
               CASE WHEN A.longAdvice = 2 OR B.endDate IS NOT NULL THEN DATEDIFF(DD, B.adviceDate, B.endDate) + 1 ELSE -1 END                                                        dayNum, B.quantity,
               total                                                                                                                                                                 totalQuantity
        FROM AdviceItemReview A
                 LEFT JOIN ${AdviceItemTable} B ON A.hospID = B.hospID AND A.orderID = B.orderID
        WHERE A.hospID = #{hospID:INTEGER} AND A.purpose > 0
    </select>-->

    <delete id="deleteAdviceItemReviewForResearch" parameterType="com.zcreate.review.model.AntiResearch">
        delete AdviceItemReview where hospID =#{hospID:INTEGER} AND purpose>0
        <if test="@com.zcreate.util.Ognl@isNotEmpty(antiItem)">
            <foreach separator="," item="item" index="index" open=" and adviceItemReviewID not in (" close=")" collection="antiItem">
                #{item.adviceItemReviewID:INTEGER}
            </foreach>
        </if>
    </delete>
</mapper>