<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zcreate.remark.dao.SunningMapper">
    <cache eviction="LRU" readOnly="false" flushInterval="6000" size="10000"/>
    <select id="getSunning" parameterType="java.util.Map" resultType="java.util.HashMap">
        select sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 then amount else 0 end) clinicAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 then amount else 0 end) hospitalAmount,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 then D.hospID else null end) clinicPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and clinicType != '急诊' and base = 2 and M.healthNo not like '4018%' then D.dispensingNo else null end) clinicBaseCount,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and clinicType != '急诊' and M.healthNo not like '4018%' then D.dispensingNo else null end) clinicCount,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and clinicType not in ('急诊', '草药方', '儿科方') then D.hospID
                                  else null end) clinicPatient2,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 then D.hospID else null end) hospitalPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and clinicType = '急诊' then D.hospID else null end) emergPatient,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and clinicType = '急诊' then D.hospID
                                  else null end) emergAntiPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 then patientDrug else null end) clinicDrugNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 then patientDrug else null end) hospitalDrugNum,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and insurance = 1 then amount else 0 end) clinic_A_Amount,
               sum(case when adviceID > 0 and insurance = 1 then amount else 0 end) hospital_A_Amount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and insurance = 2 then amount else 0 end) clinic_B_Amount,
               sum(case when adviceID > 0 and insurance = 2 then amount else 0 end) hospital_B_Amount,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and insurance = 1 then patientDrug else null end) clinic_A_DrugNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and insurance = 1 then patientDrug else null end) hospital_A_DrugNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and insurance = 2 then patientDrug else null end) clinic_B_DrugNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and insurance = 2 then patientDrug else null end) hospital_B_DrugNum,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and base > 0 then amount else 0 end) clinicBaseAmount,
               sum(case when adviceID > 0 and base > 0 then amount else 0 end) hospitalBaseAmount,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and base > 0 then patientDrug else null end) clinicBaseDrugNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and base > 0 then patientDrug else null end) hospitalBaseDrugNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and route = 2 then D.hospID else null end) clinicInjectPatient,--注射剂使用人数 route=2 > injection = 1
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and route = 2 then D.hospID else null end) clinicVdPatient,--静脉注射人数
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and base = 3 then D.goodsID else null end) localBaseNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and base = 2 then D.goodsID else null end) nationBaseNum,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and base = 2 then D.goodsID else null end) nationBaseNum,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and base = 3 then amount else 0 end) localBaseMoney,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and base = 2 then amount else 0 end) nationBaseMoney,
               --抗菌药
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 then amount else 0 end) clinicAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass = 3 then amount else 0 end) clinicSpecAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and route = 1 then amount else 0 end) clinicOrallyAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and route = 2 then amount else 0 end) clinicInjectAntiAmount,
               sum(case
                       when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and clinicType not in ('急诊', '草药方', '儿科方') then amount
                       else 0 end) clinicAntiAmount2,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and antiClass > 0 then amount else 0 end) hospitalAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and antiClass = 3 then amount else 0 end) hospitalSpecAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and antiClass > 0 and route = 1 then amount else 0 end) hospitalOrallyAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and antiClass > 0 and route = 2 then amount else 0 end) hospitalInjectAntiAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and clinicType = '急诊' then amount else 0 end) emergDrugMoney,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and clinicType = '急诊' and antiClass > 0 then amount else 0 end) emergAntiDrugMoney,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and clinicType not in ('急诊', '草药方', '儿科方') then D.patID
                                  else null end) clinicAntiPatient2,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and clinicType not in ('急诊', '草药方', '儿科方') then patientDrug
                                  else null end) clinicAntiNum,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and route = 2 then D.hospID
                                  else null end) clinicInjectAntiPatient,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and route = 2 and clinicType = '急诊' then D.hospID
                                  else null end) emergAntiInjectPatient,
               count(distinct case
                                  when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and antiClass > 0 and route = 2 and clinicType = '急诊' then M.goodsID
                                  else null end) emergAntiInjectDrugNum,
               --基于InPatient出入院
               count(distinct case when InDate >= #{fromDate:DATE} and InDate &lt; #{toDate:DATE} then P.hospID else null end) inHospitalPatient,
               count(distinct case when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} then P.hospID else null end) outHospitalPatient,
               count(distinct case when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and route = 2 then P.hospID else null end) outInjectPatient,--todo change M.injection = 1 else =hospitalVdPatient
               sum(case when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0 then D.amount else 0 end) outAntiAmount,
               count(distinct case when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0 then P.hospID else null end) outAntiPatient,
               count(distinct case when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and base = 2 and M.healthNo not like '4018%' then P.hospID else null end) outBasePatient,
               count(distinct case
                                  when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0 then cast(P.hospID as VARCHAR(10)) + cast(M.goodsID as VARCHAR(10))
                                  else null end) outAntiNum,
               count(distinct case when outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and route = 2 then P.hospID else null end) hospitalVdPatient,
               sum(case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and M.ddd > 0 and P.stay = 0 and usage != '出院带药' then contents * quantity / ddd else 0 end) DDDs,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and M.chnName in ('胃肠乐片','骨脉康胶囊') then amount else 0 end) selfClinicAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and M.chnName in ('胃肠乐片','骨脉康胶囊')  then amount else 0 end) selfHospitalAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and M.western=4 then amount else 0 end) tradClinicAmount,
               sum(case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and M.western=4 then amount else 0 end) tradHospitalAmount,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and dose ='中药注射剂' then D.hospID else null end) tradInjectClinicPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and dose ='中药注射剂' then D.hospID else null end) tradInjectHospitalPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and mental=8 and clinicType = '急诊' then D.hospID else null end) gcClinicPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID = 0 and  mental=16 then D.hospID else null end) ppiClinicPatient,
               count(distinct case when pDate >= #{fromDate:DATE} AND pDate &lt; #{toDate:DATE} and adviceID > 0 and  mental=16 then D.hospID else null end) ppiHospitalPatient

        from (select adviceID, hospID, goodsID, patID,amount, clinicType, dispensingDate pDate, quantity, usage, cast(hospID as VARCHAR(10)) + cast(goodsID as VARCHAR(10)) patientDrug,dispensingNo
              from ${DrugRecordsTable}) D
                 left join Medicine M on D.goodsID = M.goodsID
                 left join InPatient P on D.hospID = P.hospID
    </select>
    <!-- <select id="getSunningAdviceItem" parameterType="java.util.Map" resultType="java.util.HashMap">
         select count(distinct case when InDate > #{fromDate:DATE} and InDate &lt; #{toDate:DATE} then P.hospID else null end) inHospitalPatient,
                count(distinct case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} then P.hospID else null end) outHospitalPatient,
                count(distinct
                      case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and route = 2 then P.hospID else null end) outInjectionPatient, &#45;&#45;todo change M.injection = 1 else =hospitalVdPatient
                sum(case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0 then R.amount else 0 end) outAntiAmount,
                count(distinct case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0 then P.hospID else null end) outAntiPatient,
                count(distinct
                      case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0 and route = 2 then P.hospID else null end) outInjectAntiPatient,
                count(distinct case
                                   when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and antiClass > 0
                                       then cast(P.hospID as VARCHAR(10)) + cast(M.goodsID as VARCHAR(10))
                                   else null end) outAntiNum,
                count(distinct case when outDate > #{fromDate:DATE} and outDate &lt; #{toDate:DATE} and route = 2 then P.hospID else null end) hospitalVdPatient
         from ${DrugRecordsTable} R
                  left join InPatient P on R.hospID = P.hospID
                  left join Medicine M on R.goodsID = M.goodsID
     </select>-->
    <select id="getSunningInPatient" parameterType="java.util.Map" resultType="java.util.HashMap">
        select sum(datediff(day, inDate, outDate) + 1) hospitalDay,
               sum(case when checkItem &amp; 1 = 1 then 1 else 0 end) microbeCheckPatient,--送检但不一定用抗菌药
               sum(case when checkItem &amp; 4 = 4 then 1 else 0 end) microbeLimitPatient,
               sum(case when checkItem &amp; 8 = 8 then 1 else 0 end) microbeSpecPatient,
               sum(case when incision > 0 then 1 else 0 end) incisionPatient,
               sum(case when incision &amp; 1 = 1 then 1 else 0 end) oneIncisionPatient,
               sum(case when incision &amp; 8 = 8 then 1 else 0 end) oneAntiPatient,
               sum(case when incision &amp; 16 = 16 then 1 else 0 end) onePrevAntiPatient
        from InPatient
        where stay = 0 and outDate >= #{fromDate:DATE} and outDate &lt; #{toDate:DATE}
    </select>
    <!--&#45;&#45; stay留观标志
    &#45;&#45;     checkItem incision的计算在buildClinicInPatient.sql-->

</mapper>